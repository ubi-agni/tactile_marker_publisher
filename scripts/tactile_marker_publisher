#!/usr/bin/env python
# Software License Agreement (BSD License)
#
# Copyright (c) 2015, CITEC, Bielefeld University
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# * Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above
#   copyright notice, this list of conditions and the following
#   disclaimer in the documentation and/or other materials provided
#   with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

from __future__ import print_function
import sys
import argparse
import rospy
from tactile_marker_publisher.parser import URDF
from tactile_marker_publisher.publisher import Publisher

parser = argparse.ArgumentParser(usage='display tactile markers in an URDF')
parser.add_argument('file', type=argparse.FileType('r'), nargs='?', default=None,
                    help='URDF file to load (use - for stdin)')
parser.add_argument('--rate', type=int, nargs='?', default=10,
                    help='marker publishing rate')
args = parser.parse_args(rospy.myargv()[1:])

try:
	rospy.init_node('tactile_marker_publisher')

	if args.file is None:
		robot = URDF.from_parameter_server()
	else:
		robot = URDF.from_xml_string(args.file.read())

	pub = Publisher(robot.tactiles)
	if pub.numMarkers == 0:
		raise Exception('Could not find any markers')

except Exception as e:
	# fetch all config time errors
	print(e, file=sys.stderr)
	exit(1)


rate = rospy.Rate(args.rate)  # Hz
while not rospy.is_shutdown():
	pub.publish()
	rate.sleep()
